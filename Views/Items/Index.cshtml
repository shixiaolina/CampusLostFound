@model IEnumerable<Item>
@using CampusLostAndFound.Models

@{
    ViewData["Title"] = "物品列表";
}



<div class="container mt-4">
    <h1>@ViewData["Title"]</h1>

    <div class="card mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-4">
                    <input type="text" name="searchString" class="form-control" placeholder="搜索物品...">
                </div>
                <div class="col-md-3">
                    <select name="type" class="form-select" asp-items="Html.GetEnumSelectList<ItemType>()">
                        <option value="">所有类型</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select name="status" class="form-select" asp-items="Html.GetEnumSelectList<ItemStatus>()">
                        <option value="">所有状态</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">筛选</button>
                </div>
            </form>
        </div>
    </div>

    <p>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus"></i> 发布新物品
        </a>
    </p>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(item.ImagePath))
                    {
                        <img src="@item.ImagePath" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">@item.Description</p>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="badge @GetTypeBadgeClass(item.Type)">
                                @item.Type
                            </span>
                            <span class="badge @GetStatusBadgeClass(item.Status)">
                                @item.Status
                            </span>
                        </div>
                        <p class="card-text"><small class="text-muted">位置: @item.Location</small></p>
                        <p class="card-text"><small class="text-muted">发布于: @item.CreatedAt.ToString("yyyy-MM-dd")</small></p>
                    </div>
                    <div class="card-footer bg-transparent">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm">详情</a>
                        @if (item.Status == ItemStatus.Published && item.Type == ItemType.Found)
                        {
                            <a asp-action="Claim" asp-route-id="@item.Id" class="btn btn-success btn-sm">认领</a>
                        }
                        @if (User.IsInRole("Staff") || User.IsInRole("Admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">编辑</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string GetTypeBadgeClass(ItemType type)
    {
        return type switch
        {
            ItemType.Lost => "bg-danger",
            ItemType.Found => "bg-success",
            _ => "bg-secondary"
        };
    }

    string GetStatusBadgeClass(ItemStatus status)
    {
        return status switch
        {
            ItemStatus.Pending => "bg-secondary",
            ItemStatus.Published => "bg-primary",
            ItemStatus.Claimed => "bg-success",
            ItemStatus.Archived => "bg-dark",
            _ => "bg-info"
        };
    }
}

